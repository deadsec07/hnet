import base64
import binascii
import sys

def encode_shellcode(shellcode, encoding_type):
    if encoding_type == 'hex':
        return binascii.hexlify(shellcode.encode()).decode()
    elif encoding_type == 'base64':
        return base64.b64encode(shellcode.encode()).decode()
    else:
        raise ValueError("Unsupported encoding type. Use 'hex' or 'base64'.")

def decode_shellcode(encoded_shellcode, encoding_type):
    if encoding_type == 'hex':
        return binascii.unhexlify(encoded_shellcode.encode()).decode()
    elif encoding_type == 'base64':
        return base64.b64decode(encoded_shellcode.encode()).decode()
    else:
        raise ValueError("Unsupported encoding type. Use 'hex' or 'base64'.")

def main():
    if len(sys.argv) < 3:
        print("Usage: python shellcode_encoder.py <encode/decode> <shellcode> <encoding_type>")
        sys.exit(1)
    
    action = sys.argv[1]
    shellcode = sys.argv[2]
    encoding_type = sys.argv[3].lower()

    if action == 'encode':
        encoded_shellcode = encode_shellcode(shellcode, encoding_type)
        print(f"Encoded Shellcode ({encoding_type}):")
        print(encoded_shellcode)
    elif action == 'decode':
        decoded_shellcode = decode_shellcode(shellcode, encoding_type)
        print(f"Decoded Shellcode:")
        print(decoded_shellcode)
    else:
        print("Invalid action. Use 'encode' or 'decode'.")
        sys.exit(1)

if __name__ == "__main__":
    main()

